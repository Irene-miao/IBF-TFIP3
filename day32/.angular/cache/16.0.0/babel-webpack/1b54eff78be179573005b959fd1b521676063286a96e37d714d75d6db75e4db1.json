{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nlet FormComponent = class FormComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n  }\n  ngOnInit() {\n    this.friendsForm = this.createFormWithFormBuilder();\n  }\n  invalidField(ctrlName) {\n    return !!(this.friendsForm.get(ctrlName)?.invalid && this.friendsForm.get(ctrlName)?.dirty);\n  }\n  invalidForm() {\n    return this.friendsForm.invalid || this.factsArray.length <= 0;\n  }\n  addFact() {\n    this.factsArray.push(this.createFriendsFact());\n  }\n  createFriendsFact() {\n    return this.fb.group({\n      fact: new FormControl('', [Validators.minLength(3), Validators.maxLength(16)]),\n      value: this.fb.control('', [Validators.minLength(5)])\n    });\n  }\n  removeAt(i) {\n    this.factsArray.removeAt(i);\n  }\n  createFormWithFormBuilder() {\n    this.factsArray = this.fb.array([], [Validators.minLength(1)]);\n    return this.fb.group({\n      name: this.fb.control('', [Validators.required, Validators.minLength(3)]),\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      age: this.fb.control(10, [Validators.min(10)]),\n      gender: this.fb.control(''),\n      facts: this.factsArray\n    });\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);\nexport { FormComponent };","map":{"version":3,"names":["Component","inject","FormBuilder","FormControl","Validators","FormComponent","constructor","fb","ngOnInit","friendsForm","createFormWithFormBuilder","invalidField","ctrlName","get","invalid","dirty","invalidForm","factsArray","length","addFact","push","createFriendsFact","group","fact","minLength","maxLength","value","control","removeAt","i","array","name","required","email","age","min","gender","facts","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day32\\src\\app\\components\\form\\form.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Friend } from 'src/app/models';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit{\n  friendsForm!: FormGroup;\n  factsArray!: FormArray;\n  friend!: Friend;\n\n  fb: FormBuilder = inject(FormBuilder);\n\n\n  constructor() {}\n\n\n  ngOnInit(): void {\n      this.friendsForm = this.createFormWithFormBuilder()\n  }\n\n\n  invalidField(ctrlName: string): boolean{\n    return !!(this.friendsForm.get(ctrlName)?.invalid && this.friendsForm.get(ctrlName)?.dirty)\n  }\n\n  invalidForm(){\n    return this.friendsForm.invalid || this.factsArray.length<= 0\n  }\n\n  addFact(){\n    this.factsArray.push(this.createFriendsFact())\n  }\n\n  private createFriendsFact(): FormGroup {\n    return this.fb.group({\n      fact: new FormControl<string>('', [Validators.minLength(3), Validators.maxLength(16)]),\n      value: this.fb.control('', [ Validators.minLength(5)])\n    })\n  }\n\n  removeAt(i: number){\n    this.factsArray.removeAt(i)\n  }\n\n  private createFormWithFormBuilder(){\n    this.factsArray = this.fb.array([], [Validators.minLength(1)])\n    return this.fb.group({\n      name: this.fb.control<string>('', [Validators.required, Validators.minLength(3)]),\n      email: this.fb.control<string>('', [ Validators.required, Validators.email]),\n      age: this.fb.control<number>(10, [ Validators.min(10)]),\n      gender: this.fb.control<string>(''),\n      facts: this.factsArray\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAAoBC,WAAW,EAAEC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAQ3F,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAQxBC,YAAA;IAHA,KAAAC,EAAE,GAAgBN,MAAM,CAACC,WAAW,CAAC;EAGtB;EAGfM,QAAQA,CAAA;IACJ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,yBAAyB,EAAE;EACvD;EAGAC,YAAYA,CAACC,QAAgB;IAC3B,OAAO,CAAC,EAAE,IAAI,CAACH,WAAW,CAACI,GAAG,CAACD,QAAQ,CAAC,EAAEE,OAAO,IAAI,IAAI,CAACL,WAAW,CAACI,GAAG,CAACD,QAAQ,CAAC,EAAEG,KAAK,CAAC;EAC7F;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACP,WAAW,CAACK,OAAO,IAAI,IAAI,CAACG,UAAU,CAACC,MAAM,IAAG,CAAC;EAC/D;EAEAC,OAAOA,CAAA;IACL,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,iBAAiB,EAAE,CAAC;EAChD;EAEQA,iBAAiBA,CAAA;IACvB,OAAO,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC;MACnBC,IAAI,EAAE,IAAIpB,WAAW,CAAS,EAAE,EAAE,CAACC,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,EAAEpB,UAAU,CAACqB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACtFC,KAAK,EAAE,IAAI,CAACnB,EAAE,CAACoB,OAAO,CAAC,EAAE,EAAE,CAAEvB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC;KACtD,CAAC;EACJ;EAEAI,QAAQA,CAACC,CAAS;IAChB,IAAI,CAACZ,UAAU,CAACW,QAAQ,CAACC,CAAC,CAAC;EAC7B;EAEQnB,yBAAyBA,CAAA;IAC/B,IAAI,CAACO,UAAU,GAAG,IAAI,CAACV,EAAE,CAACuB,KAAK,CAAC,EAAE,EAAE,CAAC1B,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,OAAO,IAAI,CAACjB,EAAE,CAACe,KAAK,CAAC;MACnBS,IAAI,EAAE,IAAI,CAACxB,EAAE,CAACoB,OAAO,CAAS,EAAE,EAAE,CAACvB,UAAU,CAAC4B,QAAQ,EAAE5B,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjFS,KAAK,EAAE,IAAI,CAAC1B,EAAE,CAACoB,OAAO,CAAS,EAAE,EAAE,CAAEvB,UAAU,CAAC4B,QAAQ,EAAE5B,UAAU,CAAC6B,KAAK,CAAC,CAAC;MAC5EC,GAAG,EAAE,IAAI,CAAC3B,EAAE,CAACoB,OAAO,CAAS,EAAE,EAAE,CAAEvB,UAAU,CAAC+B,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACvDC,MAAM,EAAE,IAAI,CAAC7B,EAAE,CAACoB,OAAO,CAAS,EAAE,CAAC;MACnCU,KAAK,EAAE,IAAI,CAACpB;KACb,CAAC;EACJ;CACD;AAjDYZ,aAAa,GAAAiC,UAAA,EALzBtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWpC,aAAa,CAiDzB;SAjDYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}