{"ast":null,"code":"import { inject } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nfunction WeatherComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"table\")(2, \"tr\")(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"code\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"tr\");\n    i0.ɵɵelement(9, \"td\");\n    i0.ɵɵelementStart(10, \"td\")(11, \"a\", 3);\n    i0.ɵɵtext(12, \"Back\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"https://openweathermap.org/img/wn/\", ctx_r0.w.icon, \"@2x.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.w.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.w.main, \" \", ctx_r0.w.description, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n  }\n}\nclass WeatherComponent {\n  constructor() {\n    this.activatedRoute = inject(ActivatedRoute);\n    this.title = inject(Title);\n    this.city = '';\n    this.weatherSvc = inject(WeatherService);\n  }\n  ngOnInit() {\n    this.city = this.activatedRoute.snapshot.queryParams['city'];\n    const units = this.activatedRoute.snapshot.queryParams['units'] || 'metric';\n    this.title.setTitle(`YAWA: ${this.city}`);\n    this.weather$ = this.weatherSvc.getWeather(this.city, units);\n    console.warn(weather$);\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)();\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 5,\n  vars: 6,\n  consts: [[\"style\", \"font-size: 1.5em;\", 4, \"ngIf\"], [2, \"font-size\", \"1.5em\"], [3, \"src\", \"alt\"], [3, \"routerLink\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"titlecase\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, WeatherComponent_div_3_Template, 13, 6, \"div\", 0);\n      i0.ɵɵpipe(4, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ctx.city));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx.weather$));\n    }\n  },\n  dependencies: [i1.NgIf, i2.RouterLink, i1.AsyncPipe, i1.TitleCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { WeatherComponent };","map":{"version":3,"names":["inject","WeatherService","ActivatedRoute","Title","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate1","ctx_r0","w","icon","ɵɵsanitizeUrl","ɵɵpropertyInterpolate","description","ɵɵtextInterpolate2","main","ɵɵproperty","ɵɵpureFunction0","_c0","WeatherComponent","constructor","activatedRoute","title","city","weatherSvc","ngOnInit","snapshot","queryParams","units","setTitle","weather$","getWeather","console","warn","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵtemplate","WeatherComponent_div_3_Template","ɵɵtextInterpolate","ɵɵpipeBind1"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\weather\\weather.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { WeatherData } from '../models';\nimport { WeatherService } from '../weather.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport {Title} from '@angular/platform-browser';\n\n\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\nactivatedRoute = inject(ActivatedRoute);\ntitle = inject(Title);\ncity= '';\nweatherSvc = inject(WeatherService);\nweather$!: Observable<WeatherData[]>\n\nngOnInit(): void {\n  this.city = this.activatedRoute.snapshot.queryParams['city'];\n  const units = this.activatedRoute.snapshot.queryParams['units'] || 'metric'\n\n  this.title.setTitle(`YAWA: ${this.city}`)\n\n  this.weather$ = this.weatherSvc.getWeather(this.city, units)\n  console.warn(weather$)\n}\n  \n}\n","<h1>{{ city | titlecase }}</h1>\n\n<div *ngIf=\"weather$ | async as list\" style=\"font-size: 1.5em;\">\n    <table>\n        <tr>\n            <td>\n                <img src=\"https://openweathermap.org/img/wn/{{ w.icon }}@2x.png\" alt=\"{{w.description}}\">\n            </td>\n            <td>\n                <code>\n                    {{ w.main}} {{w.description}}\n                 </code>\n            </td>\n        </tr>\n        <tr>\n            <td></td>\n            <td>\n                <a [routerLink]=\"['/']\">Back</a>\n            </td>\n        </tr>\n    </table>\n</div>"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAAQC,KAAK,QAAO,2BAA2B;;;;;;;;;ICH/CC,EAAA,CAAAC,cAAA,aAAgE;IAIhDD,EAAA,CAAAE,SAAA,aAAyF;IAC7FF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IAEID,EAAA,CAAAI,MAAA,GACH;IAAAJ,EAAA,CAAAG,YAAA,EAAO;IAGhBH,EAAA,CAAAC,cAAA,SAAI;IACAD,EAAA,CAAAE,SAAA,SAAS;IACTF,EAAA,CAAAC,cAAA,UAAI;IACwBD,EAAA,CAAAI,MAAA,YAAI;IAAAJ,EAAA,CAAAG,YAAA,EAAI;;;;IAX3BH,EAAA,CAAAK,SAAA,GAA2D;IAA3DL,EAAA,CAAAM,sBAAA,8CAAAC,MAAA,CAAAC,CAAA,CAAAC,IAAA,aAAAT,EAAA,CAAAU,aAAA,CAA2D;IAACV,EAAA,CAAAW,qBAAA,QAAAJ,MAAA,CAAAC,CAAA,CAAAI,WAAA,CAAuB;IAIpFZ,EAAA,CAAAK,SAAA,GACH;IADGL,EAAA,CAAAa,kBAAA,MAAAN,MAAA,CAAAC,CAAA,CAAAM,IAAA,OAAAP,MAAA,CAAAC,CAAA,CAAAI,WAAA,MACH;IAMEZ,EAAA,CAAAK,SAAA,GAAoB;IAApBL,EAAA,CAAAe,UAAA,eAAAf,EAAA,CAAAgB,eAAA,IAAAC,GAAA,EAAoB;;;ADRvC,MAKaC,gBAAgB;EAL7BC,YAAA;IAOA,KAAAC,cAAc,GAAGxB,MAAM,CAACE,cAAc,CAAC;IACvC,KAAAuB,KAAK,GAAGzB,MAAM,CAACG,KAAK,CAAC;IACrB,KAAAuB,IAAI,GAAE,EAAE;IACR,KAAAC,UAAU,GAAG3B,MAAM,CAACC,cAAc,CAAC;;EAGnC2B,QAAQA,CAAA;IACN,IAAI,CAACF,IAAI,GAAG,IAAI,CAACF,cAAc,CAACK,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IAC5D,MAAMC,KAAK,GAAG,IAAI,CAACP,cAAc,CAACK,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC,IAAI,QAAQ;IAE3E,IAAI,CAACL,KAAK,CAACO,QAAQ,CAAC,SAAS,IAAI,CAACN,IAAI,EAAE,CAAC;IAEzC,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACN,UAAU,CAACO,UAAU,CAAC,IAAI,CAACR,IAAI,EAAEK,KAAK,CAAC;IAC5DI,OAAO,CAACC,IAAI,CAACH,QAAQ,CAAC;EACxB;;AAhBaX,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA,gBAAgB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd7BvC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAI,MAAA,GAAsB;;MAAAJ,EAAA,CAAAG,YAAA,EAAK;MAE/BH,EAAA,CAAAyC,UAAA,IAAAC,+BAAA,kBAmBM;;;;MArBF1C,EAAA,CAAAK,SAAA,GAAsB;MAAtBL,EAAA,CAAA2C,iBAAA,CAAA3C,EAAA,CAAA4C,WAAA,OAAAJ,GAAA,CAAAlB,IAAA,EAAsB;MAEpBtB,EAAA,CAAAK,SAAA,GAAuB;MAAvBL,EAAA,CAAAe,UAAA,SAAAf,EAAA,CAAA4C,WAAA,OAAAJ,GAAA,CAAAX,QAAA,EAAuB;;;;;;SDYhBX,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}