{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nlet MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.router = inject(Router);\n    }\n    ngOnInit() {\n      this.form = this.createForm();\n    }\n    process() {\n      const query = this.form.value;\n      console.info('>>> query: ', query);\n      const queryParams = {\n        units: query.units\n      };\n      this.router.navigate(['/weather', query.city], {\n        queryParams: queryParams\n      });\n    }\n    createForm() {\n      return this.fb.group({\n        city: this.fb.control('', [Validators.required, Validators.minLength(2)]),\n        units: this.fb.control('metric', [Validators.required])\n      });\n    }\n  }\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)();\n  };\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    decls: 28,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"center-it\"], [1, \"label-col\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"size\", \"30\", \"placeholder\", \"City Name\", \"formControlName\", \"city\"], [\"type\", \"radio\", \"value\", \"standard\", \"formControlName\", \"units\"], [\"type\", \"radio\", \"value\", \"metric\", \"formControlName\", \"units\"], [\"type\", \"radio\", \"value\", \"imperial\", \"formControlName\", \"units\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function MainComponent_Template_form_submit_0_listener() {\n          return ctx.process();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"table\")(3, \"tr\")(4, \"td\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"City: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"td\");\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"tr\")(10, \"td\")(11, \"label\", 3);\n        i0.ɵɵtext(12, \"Units: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"td\")(14, \"code\");\n        i0.ɵɵtext(15, \"Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 5);\n        i0.ɵɵelementStart(17, \"code\");\n        i0.ɵɵtext(18, \"Metric\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 6);\n        i0.ɵɵelementStart(20, \"code\");\n        i0.ɵɵtext(21, \"Imperial\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"tr\");\n        i0.ɵɵelement(24, \"td\");\n        i0.ɵɵelementStart(25, \"td\")(26, \"button\", 8);\n        i0.ɵɵtext(27, \" Get Weather \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return MainComponent;\n})();\nexport { MainComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}