{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass JokeService {\n  constructor(http) {\n    this.http = http;\n  }\n  getJokeAsObservable() {\n    return this.http.get('https://official-joke-api.appspot.com/random_joke');\n  }\n  getJokeAsPromise() {\n    return this.http.get('https://official-joke-api.appspot.com/random_joke').then(resp);\n  }\n}\nJokeService.ɵfac = function JokeService_Factory(t) {\n  return new (t || JokeService)(i0.ɵɵinject(i1.HttpClient));\n};\nJokeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JokeService,\n  factory: JokeService.ɵfac\n});\nexport { JokeService };","map":{"version":3,"names":["JokeService","constructor","http","getJokeAsObservable","get","getJokeAsPromise","then","resp","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\jokes\\src\\app\\joke.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { ApiResponse } from \"./models\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class JokeService {\r\n    \r\n    constructor(private http: HttpClient) {}\r\n    type: string\r\n    setup: stringpunchline: strig\r\n\r\n\r\n    getJokeAsObservable(): Observable<ApiResponse> {\r\n        return this.http.get<ApiResponse>('https://official-joke-api.appspot.com/random_joke')\r\n    }\r\n\r\n    getJokeAsPromise(): Promise<ApiResponse> {\r\n        return this.http.get<ApiResponse>('https://official-joke-api.appspot.com/random_joke')\r\n        .then(resp)\r\n    }\r\n}"],"mappings":";;AAOA,MACaA,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAKvCC,mBAAmBA,CAAA;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,mDAAmD,CAAC;EAC1F;EAEAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAc,mDAAmD,CAAC,CACrFE,IAAI,CAACC,IAAI,CAAC;EACf;;AAdSP,WAAW,C;mBAAXA,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXX,WAAW,C;SAAXA,WAAW;EAAAY,OAAA,EAAXZ,WAAW,CAAAa;AAAA;SAAXb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}