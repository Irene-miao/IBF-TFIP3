{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport * as i0 from \"@angular/core\";\nfunction ListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" no images \");\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n    this.path = [];\n  }\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(value => {\n      console.warn(value);\n      this.path = value;\n      console.warn(this.path);\n    });\n    /*this.uploadSvc.getPicture().subscribe(\n      value => {\n        this.createImage(value);\n      }\n    )*/\n  }\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"href\"], [\"noImages\", \"\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \"List of Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\")(6, \"ul\")(7, \"a\", 0)(8, \"li\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(10, \"tr\");\n      i0.ɵɵtemplate(11, ListComponent_ng_template_11_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate1(\"href\", \"http://localhost:8080/\", ctx.p, \"\", i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.p);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["inject","UploadService","i0","ɵɵtext","ListComponent","constructor","uploadSvc","path","ngOnInit","getImages","subscribe","value","console","warn","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","ListComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵpropertyInterpolate1","p","ɵɵsanitizeUrl","ɵɵtextInterpolate"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  \n  uploadSvc = inject(UploadService)\n  path: Object = []\n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(value => {\n        console.warn(value)\n        this.path = value\n        console.warn(this.path)\n      })\n     \n      /*this.uploadSvc.getPicture().subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )*/\n      \n      }\n\n  \n /* private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }*/\n\n}\n","<div>\n    <table>\n        <tr>\n            <td>List of Images</td>\n            <td>\n                <ul >\n                    <a href=\"http://localhost:8080/{{p}}\"><li>{{p}}</li></a>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <ng-template #noImages>\n                no images\n            </ng-template>\n        </tr>\n    </table>\n</div>\n\n\n    \n\n\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;;;;ICUjCC,EAAA,CAAAC,MAAA,kBACJ;;;ADTZ,MAKaC,aAAa;EAL1BC,YAAA;IAQE,KAAAC,SAAS,GAAGN,MAAM,CAACC,aAAa,CAAC;IACjC,KAAAM,IAAI,GAAW,EAAE;;EAEjBC,QAAQA,CAAA;IACJ,IAAI,CAACF,SAAS,CAACG,SAAS,EAAE,CACzBC,SAAS,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;MACnB,IAAI,CAACJ,IAAI,GAAGI,KAAK;MACjBC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACN,IAAI,CAAC;IACzB,CAAC,CAAC;IAEF;;;;;EAMA;;;AApBOH,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1BlB,EAAA,CAAAoB,cAAA,UAAK;MAGWpB,EAAA,CAAAC,MAAA,qBAAc;MAAAD,EAAA,CAAAqB,YAAA,EAAK;MACvBrB,EAAA,CAAAoB,cAAA,SAAI;MAE8CpB,EAAA,CAAAC,MAAA,GAAK;MAAAD,EAAA,CAAAqB,YAAA,EAAK;MAIhErB,EAAA,CAAAoB,cAAA,UAAI;MACApB,EAAA,CAAAsB,UAAA,KAAAC,qCAAA,gCAAAvB,EAAA,CAAAwB,sBAAA,CAEc;MAClBxB,EAAA,CAAAqB,YAAA,EAAK;;;MARUrB,EAAA,CAAAyB,SAAA,GAAkC;MAAlCzB,EAAA,CAAA0B,sBAAA,mCAAAP,GAAA,CAAAQ,CAAA,MAAA3B,EAAA,CAAA4B,aAAA,CAAkC;MAAK5B,EAAA,CAAAyB,SAAA,GAAK;MAALzB,EAAA,CAAA6B,iBAAA,CAAAV,GAAA,CAAAQ,CAAA,CAAK;;;;;SDGtDzB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}