{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { CartService } from \"./cart.service\";\nimport { inject } from \"@angular/core\";\nexport const loginGuard = (route, state) => {\n  const cartSvc = inject(CartService);\n  const router = inject(Router);\n  if (cartSvc.hasLogin()) {\n    return true;\n  }\n  return router.createUrlTree(['/']);\n};\nexport const leaveComp = (comp, currRoute, currState, nextState) => {\n  if (comp.canExit()) return true;\n  return confirm(comp.getMessage());\n};","map":{"version":3,"names":["Router","CartService","inject","loginGuard","route","state","cartSvc","router","hasLogin","createUrlTree","leaveComp","comp","currRoute","currState","nextState","canExit","confirm","getMessage"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day39\\client\\src\\app\\utils.ts"],"sourcesContent":["import { CanActivateFn, CanDeactivateFn, Router } from \"@angular/router\";\r\nimport { CartService } from \"./cart.service\";\r\nimport { inject } from \"@angular/core\";\r\n\r\n\r\n\r\nexport interface LeaveComponent {\r\n    canExit(): boolean\r\n    getMessage(): string\r\n}\r\n\r\n\r\nexport const loginGuard: CanActivateFn = (route, state) => {\r\n    const cartSvc = inject(CartService)\r\n    const router = inject(Router)\r\n\r\n    if (cartSvc.hasLogin()){\r\n        return true\r\n    }\r\n\r\n    return router.createUrlTree(['/'])\r\n}\r\n\r\nexport const leaveComp: CanDeactivateFn<LeaveComponent> = (comp, currRoute, currState, nextState) => {\r\n    if (comp.canExit())\r\n    return true\r\n\r\n\r\n    return confirm(comp.getMessage())\r\n}"],"mappings":"AAAA,SAAyCA,MAAM,QAAQ,iBAAiB;AACxE,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,eAAe;AAUtC,OAAO,MAAMC,UAAU,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACtD,MAAMC,OAAO,GAAGJ,MAAM,CAACD,WAAW,CAAC;EACnC,MAAMM,MAAM,GAAGL,MAAM,CAACF,MAAM,CAAC;EAE7B,IAAIM,OAAO,CAACE,QAAQ,EAAE,EAAC;IACnB,OAAO,IAAI;;EAGf,OAAOD,MAAM,CAACE,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAoCA,CAACC,IAAI,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,KAAI;EAChG,IAAIH,IAAI,CAACI,OAAO,EAAE,EAClB,OAAO,IAAI;EAGX,OAAOC,OAAO,CAACL,IAAI,CAACM,UAAU,EAAE,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}