{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nclass MainComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n    this.router = inject(Router);\n  }\n  ngOnInit() {\n    this.form = this.createForm();\n  }\n  process() {\n    const query = this.form.value;\n    console.warn('query: ', query);\n    const queryParams = {\n      units: query.units\n    };\n    this.router.navigate(['/weather', query.city], {\n      queryParams: queryParams\n    });\n  }\n  createForm() {\n    return this.fb.group({\n      city: this.fb.control('', [Validators.required, Validators.minLength(2)]),\n      units: this.fb.control('metric', [Validators.required])\n    });\n  }\n}\nMainComponent.ɵfac = function MainComponent_Factory(t) {\n  return new (t || MainComponent)();\n};\nMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainComponent,\n  selectors: [[\"app-main\"]],\n  decls: 28,\n  vars: 1,\n  consts: [[\"[\", \"\", \"formGroup]\", \"form\", 3, \"submit\"], [1, \"center-it\"], [1, \"label-col\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"size\", \"30\", \"placeholder\", \"City Name\", \"formControlName\", \"city\"], [\"type\", \"radio\", \"value\", \"standard\", \"formControlName\", \"units\"], [\"type\", \"radio\", \"value\", \"metric\", \"formControlName\", \"units\"], [\"type\", \"radio\", \"value\", \"imperial\", \"formControlName\", \"units\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function MainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function MainComponent_Template_form_submit_0_listener() {\n        return ctx.process();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"table\")(3, \"tr\")(4, \"td\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"City:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"td\");\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"tr\")(10, \"td\")(11, \"label\", 3);\n      i0.ɵɵtext(12, \"Units: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"td\")(14, \"code\");\n      i0.ɵɵtext(15, \"Standard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 5);\n      i0.ɵɵelementStart(17, \"code\");\n      i0.ɵɵtext(18, \"Metric\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementStart(20, \"code\");\n      i0.ɵɵtext(21, \"Imperial\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"tr\");\n      i0.ɵɵelement(24, \"td\");\n      i0.ɵɵelementStart(25, \"td\")(26, \"button\", 8);\n      i0.ɵɵtext(27, \"Get Weather\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { MainComponent };","map":{"version":3,"names":["inject","FormBuilder","Validators","Router","MainComponent","constructor","fb","router","ngOnInit","form","createForm","process","query","value","console","warn","queryParams","units","navigate","city","group","control","required","minLength","selectors","decls","vars","consts","template","MainComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","MainComponent_Template_form_submit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\main\\main.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\main\\main.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Params, Router } from '@angular/router';\nimport { WeatherQuery } from '../models';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  fb = inject(FormBuilder)\n  router = inject(Router)\n\n  form!: FormGroup\n\n  ngOnInit(): void {\n      this.form = this.createForm();\n  }\n\n  process() {\n    const query = this.form.value as WeatherQuery\n    console.warn('query: ', query)\n    const queryParams: Params = { units: query.units}\n    this.router.navigate([ '/weather', query.city], { queryParams: queryParams})\n  }\n\n  private createForm() {\n    return this.fb.group({\n      city: this.fb.control<string>('', [Validators.required, Validators.minLength(2)]),\n      units: this.fb.control('metric', [Validators.required])\n    })\n  }\n}\n","<form [ formGroup]=\"form\" (submit)=\"process()\">\n    <div class=\"center-it\">\n       <table>\n        <tr >\n            <td class=\"label-col\">\n                <label for=\"city\">City:</label>\n            </td>\n            <td>\n                <input type=\"text\" id=\"city\" size=\"30\" placeholder=\"City Name\" formControlName=\"city\">\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label for=\"city\">Units: </label>\n            </td>\n            <td>\n                <code>Standard</code>\n                <input type=\"radio\" value=\"standard\" formControlName=\"units\">\n                <code>Metric</code>\n                <input type=\"radio\" value=\"metric\" formControlName=\"units\">\n                <code>Imperial</code>\n                <input type=\"radio\" value=\"imperial\" formControlName=\"units\">\n            </td>\n        </tr>\n        <tr>\n            <td></td>\n            <td>\n                <button type=\"submit\" [disabled]=\"form.invalid\">Get Weather</button>\n            </td>\n        </tr>\n       </table>\n    </div>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}