{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"a\", 2);\n    i0.ɵɵelement(2, \"li\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" no images \");\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n  }\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(value => {\n      for (let o in value) {\n        console.warn(o);\n      }\n    });\n    /*this.uploadSvc.getPicture().subscribe(\n      value => {\n        this.createImage(value);\n      }\n    )*/\n  }\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"noImages\", \"\"], [\"href\", \"http://localhost:8080\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \"List of Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\");\n      i0.ɵɵtemplate(6, ListComponent_ul_6_Template, 3, 0, \"ul\", 0);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"tr\");\n      i0.ɵɵtemplate(8, ListComponent_ng_template_8_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.path);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["inject","UploadService","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ListComponent","constructor","uploadSvc","ngOnInit","getImages","subscribe","value","o","console","warn","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ɵɵtemplate","ListComponent_ul_6_Template","ListComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵproperty","path"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  \n  uploadSvc = inject(UploadService)\n  \n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(value => {\n        for ( let o in value) {\n          console.warn(o)\n         \n        }\n\n        \n      })\n     \n      /*this.uploadSvc.getPicture().subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )*/\n      \n      }\n\n  \n /* private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }*/\n\n}\n","<div>\n    <table>\n        <tr>\n            <td>List of Images</td>\n            <td>\n                <ul *ngFor=\"let p of path\">\n                    <a href=\"http://localhost:8080\"><li></li></a>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <ng-template #noImages>\n                no images\n            </ng-template>\n        </tr>\n    </table>\n</div>\n\n\n    \n\n\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;;;;;ICGjCC,EAAA,CAAAC,cAAA,SAA2B;IACSD,EAAA,CAAAE,SAAA,SAAS;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAMjDH,EAAA,CAAAI,MAAA,kBACJ;;;ADTZ,MAKaC,aAAa;EAL1BC,YAAA;IAQE,KAAAC,SAAS,GAAGT,MAAM,CAACC,aAAa,CAAC;;EAGjCS,QAAQA,CAAA;IACJ,IAAI,CAACD,SAAS,CAACE,SAAS,EAAE,CACzBC,SAAS,CAACC,KAAK,IAAG;MACjB,KAAM,IAAIC,CAAC,IAAID,KAAK,EAAE;QACpBE,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC;;IAKnB,CAAC,CAAC;IAEF;;;;;EAMA;;;AAvBOP,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1BrB,EAAA,CAAAC,cAAA,UAAK;MAGWD,EAAA,CAAAI,MAAA,qBAAc;MAAAJ,EAAA,CAAAG,YAAA,EAAK;MACvBH,EAAA,CAAAC,cAAA,SAAI;MACAD,EAAA,CAAAuB,UAAA,IAAAC,2BAAA,gBAEK;MACTxB,EAAA,CAAAG,YAAA,EAAK;MAETH,EAAA,CAAAC,cAAA,SAAI;MACAD,EAAA,CAAAuB,UAAA,IAAAE,oCAAA,gCAAAzB,EAAA,CAAA0B,sBAAA,CAEc;MAClB1B,EAAA,CAAAG,YAAA,EAAK;;;MATqBH,EAAA,CAAA2B,SAAA,GAAO;MAAP3B,EAAA,CAAA4B,UAAA,YAAAN,GAAA,CAAAO,IAAA,CAAO;;;;;;SDI5BxB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}