{"ast":null,"code":"import { inject } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction WeatherComponent_div_3_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"code\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const w_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"https://openweathermap.org/img/wn/\", w_r3.icon, \"@2x.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", w_r3.main, \" \", w_r3.description, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/\"];\n};\nfunction WeatherComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"table\");\n    i0.ɵɵtemplate(2, WeatherComponent_div_3_tr_2_Template, 6, 3, \"tr\", 2);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelement(4, \"td\");\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 3);\n    i0.ɵɵtext(7, \"Back\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const list_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", list_r1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nclass WeatherComponent {\n  constructor() {\n    this.activateRoute = inject(ActivatedRoute);\n    this.title = inject(Title);\n    this.weatherSvc = inject(WeatherService);\n    this.city = '';\n  }\n  ngOnInit() {\n    this.city = this.activateRoute.snapshot.params['city'];\n    const units = this.activateRoute.snapshot.queryParams['units'] || 'metric';\n    this.title.setTitle(`YAWA: ${this.city}`);\n    this.weather$ = this.weatherSvc.getWeather(this.city, units);\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)();\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 5,\n  vars: 6,\n  consts: [[\"style\", \"font-size: 1.5em;\", 4, \"ngIf\"], [2, \"font-size\", \"1.5em\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"titlecase\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, WeatherComponent_div_3_Template, 8, 3, \"div\", 0);\n      i0.ɵɵpipe(4, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ctx.city));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx.weather$));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.RouterLink, i1.AsyncPipe, i1.TitleCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { WeatherComponent };","map":{"version":3,"names":["inject","WeatherService","ActivatedRoute","Title","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate1","w_r3","icon","ɵɵsanitizeUrl","ɵɵtextInterpolate2","main","description","ɵɵtemplate","WeatherComponent_div_3_tr_2_Template","ɵɵproperty","list_r1","ɵɵpureFunction0","_c0","WeatherComponent","constructor","activateRoute","title","weatherSvc","city","ngOnInit","snapshot","params","units","queryParams","setTitle","weather$","getWeather","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","WeatherComponent_div_3_Template","ɵɵtextInterpolate","ɵɵpipeBind1"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\weather\\weather.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { WeatherData } from '../models';\nimport { WeatherService } from '../weather.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport {Title} from '@angular/platform-browser';\n\n\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\n  activateRoute = inject(ActivatedRoute)\n  title = inject(Title)\n  weatherSvc = inject(WeatherService)\n\n  city = ''\n  weather$!: Observable<WeatherData[]>\n\n  ngOnInit(): void {\n\n    this.city = this.activateRoute.snapshot.params['city']\n    const units = this.activateRoute.snapshot.queryParams['units'] || 'metric'\n\n    this.title.setTitle(`YAWA: ${this.city}`)\n\n    this.weather$ = this.weatherSvc.getWeather(this.city, units)\n\n  }\n  \n}\n","<h1>{{ city | titlecase }}</h1>\n\n<div *ngIf=\"weather$ | async as list\" style=\"font-size: 1.5em;\">\n  <table>\n    <tr *ngFor=\"let w of list\">\n      <td>\n        <img src=\"https://openweathermap.org/img/wn/{{ w.icon }}@2x.png\" alt=\"\">\n      </td>\n      <td>\n        <code>\n          {{ w.main }} {{ w.description }}\n        </code>\n      </td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>\n        <a [routerLink]=\"[ '/' ]\">Back</a>\n      </td>\n    </tr>\n  </table>\n</div>"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAAQC,KAAK,QAAO,2BAA2B;;;;;;ICD3CC,EAAA,CAAAC,cAAA,SAA2B;IAEvBD,EAAA,CAAAE,SAAA,aAAwE;IAC1EF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IAEAD,EAAA,CAAAI,MAAA,GACF;IAAAJ,EAAA,CAAAG,YAAA,EAAO;;;;IALFH,EAAA,CAAAK,SAAA,GAA2D;IAA3DL,EAAA,CAAAM,sBAAA,8CAAAC,IAAA,CAAAC,IAAA,aAAAR,EAAA,CAAAS,aAAA,CAA2D;IAI9DT,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAU,kBAAA,MAAAH,IAAA,CAAAI,IAAA,OAAAJ,IAAA,CAAAK,WAAA,MACF;;;;;;;;IATRZ,EAAA,CAAAC,cAAA,aAAgE;IAE5DD,EAAA,CAAAa,UAAA,IAAAC,oCAAA,gBASK;IACLd,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAE,SAAA,SAAS;IACTF,EAAA,CAAAC,cAAA,SAAI;IACwBD,EAAA,CAAAI,MAAA,WAAI;IAAAJ,EAAA,CAAAG,YAAA,EAAI;;;;IAbpBH,EAAA,CAAAK,SAAA,GAAO;IAAPL,EAAA,CAAAe,UAAA,YAAAC,OAAA,CAAO;IAalBhB,EAAA,CAAAK,SAAA,GAAsB;IAAtBL,EAAA,CAAAe,UAAA,eAAAf,EAAA,CAAAiB,eAAA,IAAAC,GAAA,EAAsB;;;ADRjC,MAKaC,gBAAgB;EAL7BC,YAAA;IAOE,KAAAC,aAAa,GAAGzB,MAAM,CAACE,cAAc,CAAC;IACtC,KAAAwB,KAAK,GAAG1B,MAAM,CAACG,KAAK,CAAC;IACrB,KAAAwB,UAAU,GAAG3B,MAAM,CAACC,cAAc,CAAC;IAEnC,KAAA2B,IAAI,GAAG,EAAE;;EAGTC,QAAQA,CAAA;IAEN,IAAI,CAACD,IAAI,GAAG,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACC,MAAM,CAAC,MAAM,CAAC;IACtD,MAAMC,KAAK,GAAG,IAAI,CAACP,aAAa,CAACK,QAAQ,CAACG,WAAW,CAAC,OAAO,CAAC,IAAI,QAAQ;IAE1E,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAC,SAAS,IAAI,CAACN,IAAI,EAAE,CAAC;IAEzC,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACR,UAAU,CAACS,UAAU,CAAC,IAAI,CAACR,IAAI,EAAEI,KAAK,CAAC;EAE9D;;AAlBWT,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA,gBAAgB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd7BvC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAI,MAAA,GAAsB;;MAAAJ,EAAA,CAAAG,YAAA,EAAK;MAE/BH,EAAA,CAAAa,UAAA,IAAA4B,+BAAA,iBAmBM;;;;MArBFzC,EAAA,CAAAK,SAAA,GAAsB;MAAtBL,EAAA,CAAA0C,iBAAA,CAAA1C,EAAA,CAAA2C,WAAA,OAAAH,GAAA,CAAAhB,IAAA,EAAsB;MAEpBxB,EAAA,CAAAK,SAAA,GAAuB;MAAvBL,EAAA,CAAAe,UAAA,SAAAf,EAAA,CAAA2C,WAAA,OAAAH,GAAA,CAAAT,QAAA,EAAuB;;;;;;SDYhBZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}