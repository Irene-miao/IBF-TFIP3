{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ThoughtsComponent } from './thoughts/thoughts.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/toolbar\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"./thoughts/thoughts.component\";\nclass AppComponent {\n  constructor() {\n    this.canShare = false;\n    this.fb = inject(FormBuilder);\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      email: this.fb.control('', [Validators.required])\n    });\n    this.canShare = !!navigator.share;\n  }\n  share(text) {\n    const data = {\n      title: 'Share a thought',\n      text\n      //url: 'http://google.com\n    };\n\n    navigator.share(data).then(result => {\n      alert('Shared');\n      this.thoughtCompo.clearForm();\n    }).catch(err => alert('JSON: ' + JSON.stringify(err)));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(ThoughtsComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thoughtCompo = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 2,\n  consts: [[\"color\", \"primary\"], [\"type\", \"button\", \"mat-icon-button\", \"\"], [3, \"formGroup\"], [1, \"grid-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Your name\", \"formControlName\", \"name\"], [\"appearance\", \"fill\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Your email\", \"formControlName\", \"email\"], [3, \"canShare\", \"onThought\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"button\", 1);\n      i0.ɵɵelement(2, \"mat-icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"span\");\n      i0.ɵɵtext(4, \"My Application\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 2)(6, \"div\", 3)(7, \"mat-form-field\", 4)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 6)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"app-thoughts\", 8);\n      i0.ɵɵlistener(\"onThought\", function AppComponent_Template_app_thoughts_onThought_15_listener($event) {\n        return ctx.share($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"canShare\", ctx.canShare);\n    }\n  },\n  dependencies: [i1.MatToolbar, i2.MatIconButton, i3.MatIcon, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.ThoughtsComponent],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n    grid-row-gap: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsMEJBQTBCO0lBQzFCLGVBQWU7RUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgZ3JpZC1yb3ctZ2FwOiAwO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["inject","FormBuilder","Validators","ThoughtsComponent","AppComponent","constructor","canShare","fb","ngOnInit","form","group","name","control","required","email","navigator","share","text","data","title","then","result","alert","thoughtCompo","clearForm","catch","err","JSON","stringify","selectors","viewQuery","AppComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","AppComponent_Template_app_thoughts_onThought_15_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\app.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ThoughtsComponent } from './thoughts/thoughts.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(ThoughtsComponent)\n  thoughtCompo!: ThoughtsComponent\n\n  canShare = false\n\n  form!: FormGroup\n  fb: FormBuilder = inject(FormBuilder)\n\n\nngOnInit(): void {\n    this.form = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      email: this.fb.control('', [Validators.required]),\n    })\n\n    this.canShare = !!navigator.share\n}\n\nshare(text: string) {\n  const data: any = {\n    title: 'Share a thought',\n    text,\n    //url: 'http://google.com\n  }\n  navigator.share(data)\n  .then(result => {\n    alert('Shared')\n    this.thoughtCompo.clearForm() })\n    .catch(err => alert('JSON: ' + JSON.stringify(err)))\n}\n}\n","<mat-toolbar color=\"primary\">\n  <button type=\"button\" mat-icon-button>\n  <mat-icon></mat-icon>\n</button>\n  <span>My Application</span>\n</mat-toolbar>\n\n<form [formGroup]=\"form\">\n  <div class=\"grid-container\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Name</mat-label>\n      <input type=\"text\" matInput placeholder=\"Your name\" formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Email</mat-label>\n      <input type=\"email\"\n matInput placeholder=\"Your email\"  formControlName=\"email\">\n    </mat-form-field>\n</div>\n</form>\n\n<app-thoughts [canShare]=\"canShare\" (onThought)=\"share($event)\"></app-thoughts>"],"mappings":"AAAA,SAAuCA,MAAM,QAAQ,eAAe;AACpE,SAASC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,iBAAiB,QAAQ,+BAA+B;;;;;;;;;AAEjE,MAKaC,YAAY;EALzBC,YAAA;IASE,KAAAC,QAAQ,GAAG,KAAK;IAGhB,KAAAC,EAAE,GAAgBP,MAAM,CAACC,WAAW,CAAC;;EAGvCO,QAAQA,CAAA;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACxBC,IAAI,EAAE,IAAI,CAACJ,EAAE,CAACK,OAAO,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MAChDC,KAAK,EAAE,IAAI,CAACP,EAAE,CAACK,OAAO,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,CAAC;KACjD,CAAC;IAEF,IAAI,CAACP,QAAQ,GAAG,CAAC,CAACS,SAAS,CAACC,KAAK;EACrC;EAEAA,KAAKA,CAACC,IAAY;IAChB,MAAMC,IAAI,GAAQ;MAChBC,KAAK,EAAE,iBAAiB;MACxBF;MACA;KACD;;IACDF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,CACpBE,IAAI,CAACC,MAAM,IAAG;MACbC,KAAK,CAAC,QAAQ,CAAC;MACf,IAAI,CAACC,YAAY,CAACC,SAAS,EAAE;IAAC,CAAC,CAAC,CAC/BC,KAAK,CAACC,GAAG,IAAIJ,KAAK,CAAC,QAAQ,GAAGK,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC,CAAC,CAAC;EACxD;;AA9BatB,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAyB,SAAA;EAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;qBACZ7B,iBAAiB;;;;;;;;;;;;MCV9B+B,EAAA,CAAAC,cAAA,qBAA6B;MAE3BD,EAAA,CAAAE,SAAA,eAAqB;MACvBF,EAAA,CAAAG,YAAA,EAAS;MACPH,EAAA,CAAAC,cAAA,WAAM;MAAAD,EAAA,CAAAI,MAAA,qBAAc;MAAAJ,EAAA,CAAAG,YAAA,EAAO;MAG7BH,EAAA,CAAAC,cAAA,cAAyB;MAGRD,EAAA,CAAAI,MAAA,WAAI;MAAAJ,EAAA,CAAAG,YAAA,EAAY;MAC3BH,EAAA,CAAAE,SAAA,gBAA2E;MAC7EF,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,yBAAkC;MACrBD,EAAA,CAAAI,MAAA,aAAK;MAAAJ,EAAA,CAAAG,YAAA,EAAY;MAC5BH,EAAA,CAAAE,SAAA,gBACsD;MACxDF,EAAA,CAAAG,YAAA,EAAiB;MAIrBH,EAAA,CAAAC,cAAA,uBAAgE;MAA5BD,EAAA,CAAAK,UAAA,uBAAAC,yDAAAC,MAAA;QAAA,OAAaR,GAAA,CAAAjB,KAAA,CAAAyB,MAAA,CAAa;MAAA,EAAC;MAACP,EAAA,CAAAG,YAAA,EAAe;;;MAdzEH,EAAA,CAAAQ,SAAA,GAAkB;MAAlBR,EAAA,CAAAS,UAAA,cAAAV,GAAA,CAAAxB,IAAA,CAAkB;MAcVyB,EAAA,CAAAQ,SAAA,IAAqB;MAArBR,EAAA,CAAAS,UAAA,aAAAV,GAAA,CAAA3B,QAAA,CAAqB;;;;;;SDZtBF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}