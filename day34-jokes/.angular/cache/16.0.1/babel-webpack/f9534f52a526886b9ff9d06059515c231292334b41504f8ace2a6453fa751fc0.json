{"ast":null,"code":"import { inject } from '@angular/core';\nimport { JokeService } from './joke.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const r_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Setup: \", r_r3, \"\");\n  }\n}\nfunction AppComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\nThere are no joke\\n\");\n  }\n}\nclass AppComponent {\n  constructor() {\n    this.jokeSvc = inject(JokeService);\n  }\n  getJokeAsObservable() {\n    this.resp$ = this.jokeSvc.getJokeAsObservable().subscribe({\n      next: data => {\n        console.info(data[0].setup);\n      },\n      error: error,\n      HttpErrorResponse\n    });\n    {\n      this.console.error(error);\n    }\n    complete: ;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noJoke\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 3, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, AppComponent_ng_template_2_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.respSetup$))(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };\ngetJokeAsPromiseSetup();\n{\n  this.respSetup$ = this.jokeSvc.getJokeAsPromiseSetup();\n  console.info(this.respSetup$);\n}\ngetJokeAsPromisePunchline();\n{\n  this.respPunchline$ = this.jokeSvc.getJokeAsPromisePunchline();\n  console.info(this.respPunchline$);\n}","map":{"version":3,"names":["inject","JokeService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","r_r3","AppComponent","constructor","jokeSvc","getJokeAsObservable","resp$","subscribe","next","data","console","info","setup","error","HttpErrorResponse","complete","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_0_Template","AppComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵproperty","ɵɵpipeBind1","respSetup$","_r1","getJokeAsPromiseSetup","getJokeAsPromisePunchline","respPunchline$"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\jokes\\src\\app\\app.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\jokes\\src\\app\\app.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { JokeService } from './joke.service';\nimport { ApiResponse } from './models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  jokeSvc = inject(JokeService)\n\n  resp$!: Observable<ApiResponse>\n\n  respSetup$!: Promise<string>\n\n  respPunchline$!: Promise<string>\n\n  getJokeAsObservable() {\n    this.resp$ = this.jokeSvc.getJokeAsObservable()\n    .subscribe({\n      next: (data) => { console.info(data[0].setup)},\n      error: (error HttpErrorResponse) => { this.console.error(error)},\n      complete: \n    })\n    console.info(this.resp$)\n  }\n\n  getJokeAsPromiseSetup() {\n    this.respSetup$ = this.jokeSvc.getJokeAsPromiseSetup()\n    console.info(this.respSetup$)\n  }\n\n  getJokeAsPromisePunchline() {\n    this.respPunchline$ = this.jokeSvc.getJokeAsPromisePunchline()\n    console.info(this.respPunchline$)\n  }\n}\n","<div *ngIf=\"respSetup$ | async as r else noJoke\">\n \n  <p>Setup: {{ r}}</p>\n  \n</div>\n\n\n<ng-template #noJoke>\nThere are no joke\n</ng-template>"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,WAAW,QAAQ,gBAAgB;;;;;ICD5CC,EAAA,CAAAC,cAAA,UAAiD;IAE5CD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAjBH,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,kBAAA,YAAAC,IAAA,KAAa;;;;;IAMlBN,EAAA,CAAAE,MAAA,4BACA;;;ADJA,MAKaK,YAAY;EALzBC,YAAA;IAOE,KAAAC,OAAO,GAAGX,MAAM,CAACC,WAAW,CAAC;;EAQ7BW,mBAAmBA,CAAA;IACjB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,OAAO,CAACC,mBAAmB,EAAE,CAC9CE,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QAAGC,OAAO,CAACC,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC;MAAA,CAAC;MAC9CC,KAAK,EAAGA,KAAK;MAACC;KAAiB,CAAC;IAAI;MAAE,IAAI,CAACJ,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;;IAC/DE,QAAQ,EACV;EAAA;;AAhBSb,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVzB3B,EAAA,CAAA6B,UAAA,IAAAC,2BAAA,iBAIM;;MAGN9B,EAAA,CAAA6B,UAAA,IAAAE,mCAAA,gCAAA/B,EAAA,CAAAgC,sBAAA,CAEc;;;;MATRhC,EAAA,CAAAiC,UAAA,SAAAjC,EAAA,CAAAkC,WAAA,OAAAN,GAAA,CAAAO,UAAA,EAAyB,aAAAC,GAAA;;;;;;SDUlB7B,YAAY;AAoBvB8B,qBAAqB,EAAE;AAAC;EACtB,IAAI,CAACF,UAAU,GAAG,IAAI,CAAC1B,OAAO,CAAC4B,qBAAqB,EAAE;EACtDtB,OAAO,CAACC,IAAI,CAAC,IAAI,CAACmB,UAAU,CAAC;;AAG/BG,yBAAyB,EAAE;AAAC;EAC1B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC9B,OAAO,CAAC6B,yBAAyB,EAAE;EAC9DvB,OAAO,CAACC,IAAI,CAAC,IAAI,CAACuB,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}