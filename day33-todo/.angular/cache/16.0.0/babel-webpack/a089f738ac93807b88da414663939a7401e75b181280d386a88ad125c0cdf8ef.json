{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CreatetodoComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please enter a valid title \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreatetodoComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please enter a valid name \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass CreatetodoComponent {\n  constructor() {\n    this.onSelected = new Subject();\n    this.fb = inject(FormBuilder);\n  }\n  createTask() {\n    return this.fb.group({\n      task: this.fb.control(''),\n      priority: this.fb.control(''),\n      dueDate: this.fb.control('')\n    });\n  }\n  invalidField(ctrlName) {\n    return !!(this.taskForm.get(ctrlName)?.invalid && this.tasksForm.get(ctrlName)?.dirty);\n  }\n  invalidForm() {\n    return this.taskForm.invalid;\n  }\n  addTask() {\n    this.tasksArray.push(this.createTask());\n  }\n  removeTask() {\n    this.taskArr;\n  }\n  createTodo() {\n    this.taskArr = this.fb.array([]);\n    return this.fb.group({\n      title: this.fb.control(''),\n      name: this.fb.control(''),\n      tasks: this.taskArr\n    });\n  }\n  ngOnInit() {\n    this.taskForm = this.createTodo();\n  }\n}\nCreatetodoComponent.ɵfac = function CreatetodoComponent_Factory(t) {\n  return new (t || CreatetodoComponent)();\n};\nCreatetodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreatetodoComponent,\n  selectors: [[\"app-createtodo\"]],\n  inputs: {\n    tasksArray: \"tasksArray\"\n  },\n  outputs: {\n    onSelected: \"onSelected\"\n  },\n  decls: 20,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"size\", \"30\", \"placeholder\", \"Title\", \"formControlName\", \"title\"], [4, \"ngIf\"], [\"type\", \"text\", \"size\", \"30\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function CreatetodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function CreatetodoComponent_Template_form_submit_0_listener() {\n        return ctx.createForm();\n      });\n      i0.ɵɵelementStart(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \" Title \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\");\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵtemplate(7, CreatetodoComponent_span_7_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n      i0.ɵɵtext(10, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵelement(12, \"input\", 3);\n      i0.ɵɵtemplate(13, CreatetodoComponent_span_13_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tr\")(15, \"td\")(16, \"button\", 4);\n      i0.ɵɵtext(17, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CreatetodoComponent_Template_button_click_18_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(19, \"Add Task\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidField(\"title\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidField(\"name\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.invalidForm());\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CreatetodoComponent };","map":{"version":3,"names":["inject","FormBuilder","Subject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreatetodoComponent","constructor","onSelected","fb","createTask","group","task","control","priority","dueDate","invalidField","ctrlName","taskForm","get","invalid","tasksForm","dirty","invalidForm","addTask","tasksArray","push","removeTask","taskArr","createTodo","array","title","name","tasks","ngOnInit","selectors","inputs","outputs","decls","vars","consts","template","CreatetodoComponent_Template","rf","ctx","ɵɵlistener","CreatetodoComponent_Template_form_submit_0_listener","createForm","ɵɵelement","ɵɵtemplate","CreatetodoComponent_span_7_Template","CreatetodoComponent_span_13_Template","CreatetodoComponent_Template_button_click_18_listener","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\todo\\src\\app\\createtodo\\createtodo.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\todo\\src\\app\\createtodo\\createtodo.component.html"],"sourcesContent":["import { Component, Input, OnInit, Output, inject } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Task } from '../models';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-createtodo',\n  templateUrl: './createtodo.component.html',\n  styleUrls: ['./createtodo.component.css']\n})\nexport class CreatetodoComponent implements OnInit{\ntaskForm!: FormGroup\n@Input() tasksArray!:  FormArray\n@Output() onSelected = new Subject<Task>()\n\n\n\nfb: FormBuilder = inject(FormBuilder)\n\n\nprivate createTask(): FormGroup {\n return this.fb.group({\n  task: this.fb.control<string>(''),\n  priority: this.fb.control<string>(''),\n  dueDate: this.fb.control<string>('')\n })\n}\n\n\ninvalidField(ctrlName: string): boolean {\n  return !!(this.taskForm.get(ctrlName)?.invalid && this.tasksForm.get(ctrlName)?.dirty)\n}\n\n\ninvalidForm(){\n  return this.taskForm.invalid\n}\n\naddTask() {\n  this.tasksArray.push(this.createTask())\n}\n\nremoveTask() {\n  this.taskArr\n}\n\nprivate createTodo(): FormGroup{\n  this.taskArr  = this.fb.array([])\n  return this.fb.group({\n    title: this.fb.control<string>(''),\n    name: this.fb.control<string>(''),\n    tasks: this.taskArr\n  })\n}\n\n\n\n\nngOnInit() {\nthis.taskForm = this.createTodo()\n}\n\n\n\n}\n","<form [formGroup]=\"taskForm\" (submit)=\"createForm()\">\n   <table>\n    <tr>\n        <td>\n            Title\n        </td>\n        <td>\n            <input type=\"text\" size=\"30\" placeholder=\"Title\" formControlName=\"title\">\n            <span *ngIf=\"invalidField('title')\">\n                Please enter a valid title\n            </span>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            Name\n        </td>\n        <td>\n            <input type=\"text\" size=\"30\" placeholder=\"Name\" formControlName=\"name\">\n            <span *ngIf=\"invalidField('name')\">\n                Please enter a valid name\n            </span>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <button type=\"submit\" [disabled]=\"invalidForm()\">Save</button>\n            <button type=\"button\" (click)=\"addTask()\">Add Task</button>\n        </td>\n    </tr>\n   </table>\n\n  \n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}