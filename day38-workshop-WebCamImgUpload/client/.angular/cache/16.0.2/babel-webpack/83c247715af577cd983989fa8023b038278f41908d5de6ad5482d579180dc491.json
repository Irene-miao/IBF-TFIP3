{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nconst url = 'http://localhost:8080/upload';\nclass CameraService {\n  constructor() {\n    this.photo = \"\";\n    this.http = inject(HttpClient);\n  }\n  upload(f, comments) {\n    const formData = new FormData();\n    formData.set('file', f);\n    formData.set('comments', comments);\n    return this.http.post('/upload', formData);\n  }\n}\nCameraService.ɵfac = function CameraService_Factory(t) {\n  return new (t || CameraService)();\n};\nCameraService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CameraService,\n  factory: CameraService.ɵfac,\n  providedIn: 'root'\n});\nexport { CameraService };","map":{"version":3,"names":["inject","HttpClient","url","CameraService","constructor","photo","http","upload","f","comments","formData","FormData","set","post","factory","ɵfac","providedIn"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\camera\\src\\app\\camera.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst url = 'http://localhost:8080/upload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CameraService {\n\n  photo = \"\";\n\n  http = inject(HttpClient);\n  \n  upload(f: File, comments: string) {\n    const formData = new FormData();\n    formData.set('file', f);\n    formData.set('comments', comments)\n    return this.http.post<any>('/upload', formData)\n  }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;;AAEjD,MAAMC,GAAG,GAAG,8BAA8B;AAE1C,MAGaC,aAAa;EAH1BC,YAAA;IAKE,KAAAC,KAAK,GAAG,EAAE;IAEV,KAAAC,IAAI,GAAGN,MAAM,CAACC,UAAU,CAAC;;EAEzBM,MAAMA,CAACC,CAAO,EAAEC,QAAgB;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,GAAG,CAAC,MAAM,EAAEJ,CAAC,CAAC;IACvBE,QAAQ,CAACE,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAClC,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAM,SAAS,EAAEH,QAAQ,CAAC;EACjD;;AAXWP,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAW,OAAA,EAAbX,aAAa,CAAAY,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}