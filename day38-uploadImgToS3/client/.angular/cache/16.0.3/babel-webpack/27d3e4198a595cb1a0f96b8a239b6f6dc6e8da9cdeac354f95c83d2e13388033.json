{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nlet ListComponent = class ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n    this.path = [];\n    /* private createImage(image: Blob) {\n       if (image && image.size > 0) {\n         let reader = new FileReader();\n         reader.onload = (e) => this.picture = e.target?.result;\n         reader.readAsDataURL(image);\n       }\n     }*/\n  }\n\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(value => {\n      console.warn(value);\n      this.path = value;\n      console.warn(this.path);\n    });\n    /*this.uploadSvc.getPicture().subscribe(\n      value => {\n        this.createImage(value);\n      }\n    )*/\n  }\n};\n\nListComponent = __decorate([Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})], ListComponent);\nexport { ListComponent };","map":{"version":3,"names":["Component","inject","UploadService","ListComponent","constructor","uploadSvc","path","ngOnInit","getImages","subscribe","value","console","warn","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  \n  uploadSvc = inject(UploadService)\n  path: Object = []\n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(value => {\n        console.warn(value)\n        this.path = value\n        console.warn(this.path)\n      })\n     \n      /*this.uploadSvc.getPicture().subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )*/\n      \n      }\n\n  \n /* private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }*/\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;AAOjD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAA1BC,YAAA;IAGE,KAAAC,SAAS,GAAGJ,MAAM,CAACC,aAAa,CAAC;IACjC,KAAAI,IAAI,GAAW,EAAE;IAmBlB;;;;;;;EAQD;;EAzBEC,QAAQA,CAAA;IACJ,IAAI,CAACF,SAAS,CAACG,SAAS,EAAE,CACzBC,SAAS,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;MACnB,IAAI,CAACJ,IAAI,GAAGI,KAAK;MACjBC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACN,IAAI,CAAC;IACzB,CAAC,CAAC;IAEF;;;;;EAMA;CAWL;;AA/BYH,aAAa,GAAAU,UAAA,EALzBb,SAAS,CAAC;EACTc,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWb,aAAa,CA+BzB;SA/BYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}