{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"a\", 2)(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"http://localhost:8080/\", i_r3, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3);\n  }\n}\nfunction ListComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" no images\\n\");\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n  }\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(imagePath => {\n      this.path = imagePath;\n    });\n    this.uploadSvc.getPicture(imagePath).subscribe(value => {\n      console.warn(imagePath);\n      this.createImage(value);\n    });\n  }\n  createImage(image) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = e => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 10,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noImages\", \"\"], [3, \"href\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \"List of Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\");\n      i0.ɵɵtemplate(6, ListComponent_ul_6_Template, 4, 2, \"ul\", 0);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(8, ListComponent_ng_template_8_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 2, ctx.images$))(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["inject","UploadService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","i_r3","ɵɵsanitizeUrl","ɵɵtextInterpolate","ListComponent","constructor","uploadSvc","ngOnInit","getImages","subscribe","imagePath","path","getPicture","value","console","warn","createImage","image","size","reader","FileReader","onload","e","picture","target","result","readAsDataURL","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ɵɵtemplate","ListComponent_ul_6_Template","ListComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","ɵɵproperty","ɵɵpipeBind1","images$","_r1"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  \n  uploadSvc = inject(UploadService)\n  path !: Object\n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(imagePath => {\n        this.path = imagePath\n      })\n     \n      this.uploadSvc.getPicture(imagePath).subscribe(\n        value => {\n          console.warn(imagePath)\n          this.createImage(value);\n        }\n      )\n      \n      }\n\n  \n  private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }\n\n}\n","<div>\n    <table>\n        <tr>\n            <td>List of Images</td>\n            <td>\n                <ul *ngIf=\"images$ | async as i; else noImages\">\n                    <a href=\"http://localhost:8080/{{i}}\"><li>{{i}}</li></a>\n                </ul>\n            </td>\n        </tr>\n    </table>\n</div>\n<ng-template #noImages>\n    no images\n</ng-template>\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;;;;;ICGjCC,EAAA,CAAAC,cAAA,SAAgD;IACFD,EAAA,CAAAE,MAAA,GAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAjDH,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAK,sBAAA,mCAAAC,IAAA,MAAAN,EAAA,CAAAO,aAAA,CAAkC;IAAKP,EAAA,CAAAI,SAAA,GAAK;IAALJ,EAAA,CAAAQ,iBAAA,CAAAF,IAAA,CAAK;;;;;IAO/DN,EAAA,CAAAE,MAAA,mBACJ;;;ADVA,MAKaO,aAAa;EAL1BC,YAAA;IAQE,KAAAC,SAAS,GAAGb,MAAM,CAACC,aAAa,CAAC;;EAGjCa,QAAQA,CAAA;IACJ,IAAI,CAACD,SAAS,CAACE,SAAS,EAAE,CACzBC,SAAS,CAACC,SAAS,IAAG;MACrB,IAAI,CAACC,IAAI,GAAGD,SAAS;IACvB,CAAC,CAAC;IAEF,IAAI,CAACJ,SAAS,CAACM,UAAU,CAACF,SAAS,CAAC,CAACD,SAAS,CAC5CI,KAAK,IAAG;MACNC,OAAO,CAACC,IAAI,CAACL,SAAS,CAAC;MACvB,IAAI,CAACM,WAAW,CAACH,KAAK,CAAC;IACzB,CAAC,CACF;EAED;EAGIG,WAAWA,CAACC,KAAW;IAC7B,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,CAAC,EAAE;MAC3B,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC7BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK,IAAI,CAACC,OAAO,GAAGD,CAAC,CAACE,MAAM,EAAEC,MAAM;MACtDN,MAAM,CAACO,aAAa,CAACT,KAAK,CAAC;;EAE/B;;AA5BWb,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1BtC,EAAA,CAAAC,cAAA,UAAK;MAGWD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACvBH,EAAA,CAAAC,cAAA,SAAI;MACAD,EAAA,CAAAwC,UAAA,IAAAC,2BAAA,gBAEK;;MACTzC,EAAA,CAAAG,YAAA,EAAK;MAIjBH,EAAA,CAAAwC,UAAA,IAAAE,oCAAA,gCAAA1C,EAAA,CAAA2C,sBAAA,CAEc;;;;MATO3C,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAA4C,UAAA,SAAA5C,EAAA,CAAA6C,WAAA,OAAAN,GAAA,CAAAO,OAAA,EAAsB,aAAAC,GAAA;;;;;;SDI9BtC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}