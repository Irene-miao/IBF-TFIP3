{"ast":null,"code":"import { inject } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction WeatherComponent_div_3_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"code\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const w_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"https://openweathermap.org/img/wn/\", w_r3.icon, \"@2x.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", w_r3.main, \" \", w_r3.description, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/\"];\n};\nfunction WeatherComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"table\");\n    i0.ɵɵtemplate(2, WeatherComponent_div_3_tr_2_Template, 6, 3, \"tr\", 2);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelement(4, \"td\");\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 3);\n    i0.ɵɵtext(7, \"Back\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const list_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", list_r1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nlet WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor() {\n      this.activateRoute = inject(ActivatedRoute);\n      this.title = inject(Title);\n      this.weatherSvc = inject(WeatherService);\n      this.city = '';\n    }\n    ngOnInit() {\n      this.city = this.activateRoute.snapshot.params['city'];\n      const units = this.activateRoute.snapshot.queryParams['units'] || 'metric';\n      this.title.setTitle(`YAWA: ${this.city}`);\n      this.weather$ = this.weatherSvc.getWeather(this.city, units);\n    }\n  }\n  WeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)();\n  };\n  WeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    decls: 5,\n    vars: 6,\n    consts: [[\"style\", \"font-size: 1.5em;\", 4, \"ngIf\"], [2, \"font-size\", \"1.5em\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [\"alt\", \"\", 3, \"src\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, WeatherComponent_div_3_Template, 8, 3, \"div\", 0);\n        i0.ɵɵpipe(4, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ctx.city));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx.weather$));\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.RouterLink, i1.AsyncPipe, i1.TitleCasePipe]\n  });\n  return WeatherComponent;\n})();\nexport { WeatherComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}