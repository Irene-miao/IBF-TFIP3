{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nlet CreatetodoComponent = class CreatetodoComponent {\n  constructor() {\n    this.onNewTask = new Subject();\n    this.fb = inject(FormBuilder);\n  }\n  createTask() {\n    return this.fb.group({\n      task: this.fb.control(''),\n      priority: this.fb.control(''),\n      dueDate: this.fb.control('')\n    });\n  }\n  invalidField(ctrlName) {\n    return !!(this.taskForm.get(ctrlName)?.invalid && this.tasksForm.get(ctrlName)?.dirty);\n  }\n  invalidForm() {\n    return this.taskForm.invalid;\n  }\n  addTask() {\n    this.tasksArr.push(this.createTask());\n  }\n  removeTask(i) {\n    this.tasksArray.removeAt(i);\n  }\n  processTask() {\n    const todo = this.todoForm.value;\n  }\n  createTodo() {\n    this.taskArr = this.fb.array([]);\n    return this.fb.group({\n      title: this.fb.control(''),\n      name: this.fb.control(''),\n      tasks: this.taskArr\n    });\n  }\n  ngOnInit() {\n    this.taskForm = this.createTodo();\n  }\n};\n__decorate([Output()], CreatetodoComponent.prototype, \"onNewTask\", void 0);\nCreatetodoComponent = __decorate([Component({\n  selector: 'app-createtodo',\n  templateUrl: './createtodo.component.html',\n  styleUrls: ['./createtodo.component.css']\n})], CreatetodoComponent);\nexport { CreatetodoComponent };","map":{"version":3,"names":["Component","Output","inject","FormBuilder","Subject","CreatetodoComponent","constructor","onNewTask","fb","createTask","group","task","control","priority","dueDate","invalidField","ctrlName","taskForm","get","invalid","tasksForm","dirty","invalidForm","addTask","tasksArr","push","removeTask","i","tasksArray","removeAt","processTask","todo","todoForm","value","createTodo","taskArr","array","title","name","tasks","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\todo\\src\\app\\createtodo\\createtodo.component.ts"],"sourcesContent":["import { Component, Input, OnInit, Output, inject } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Task } from '../models';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-createtodo',\n  templateUrl: './createtodo.component.html',\n  styleUrls: ['./createtodo.component.css']\n})\nexport class CreatetodoComponent implements OnInit{\ntaskForm!: FormGroup\ntasksArr!:  FormArray\n@Output() onNewTask = new Subject<Task>()\n\n\n\nfb: FormBuilder = inject(FormBuilder)\n\n\nprivate createTask(): FormGroup {\n return this.fb.group({\n  task: this.fb.control<string>(''),\n  priority: this.fb.control<string>(''),\n  dueDate: this.fb.control<string>('')\n })\n}\n\n\ninvalidField(ctrlName: string): boolean {\n  return !!(this.taskForm.get(ctrlName)?.invalid && this.tasksForm.get(ctrlName)?.dirty)\n}\n\n\ninvalidForm(){\n  return this.taskForm.invalid\n}\n\naddTask() {\n  this.tasksArr.push(this.createTask())\n}\n\nremoveTask(i: number) {\n  this.tasksArray.removeAt(i)\n}\n\nprocessTask() {\n  const todo = this.todoForm.value \n}\n\nprivate createTodo(): FormGroup{\n  this.taskArr  = this.fb.array([])\n  return this.fb.group({\n    title: this.fb.control<string>(''),\n    name: this.fb.control<string>(''),\n    tasks: this.taskArr\n  })\n}\n\n\n\n\nngOnInit() {\nthis.taskForm = this.createTodo()\n}\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAiBC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACxE,SAAoBC,WAAW,QAA4C,gBAAgB;AAE3F,SAASC,OAAO,QAAQ,MAAM;AAO9B,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAAhCC,YAAA;IAGU,KAAAC,SAAS,GAAG,IAAIH,OAAO,EAAQ;IAIzC,KAAAI,EAAE,GAAgBN,MAAM,CAACC,WAAW,CAAC;EAmDrC;EAhDQM,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACpBC,IAAI,EAAE,IAAI,CAACH,EAAE,CAACI,OAAO,CAAS,EAAE,CAAC;MACjCC,QAAQ,EAAE,IAAI,CAACL,EAAE,CAACI,OAAO,CAAS,EAAE,CAAC;MACrCE,OAAO,EAAE,IAAI,CAACN,EAAE,CAACI,OAAO,CAAS,EAAE;KACnC,CAAC;EACH;EAGAG,YAAYA,CAACC,QAAgB;IAC3B,OAAO,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAEG,OAAO,IAAI,IAAI,CAACC,SAAS,CAACF,GAAG,CAACF,QAAQ,CAAC,EAAEK,KAAK,CAAC;EACxF;EAGAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,QAAQ,CAACE,OAAO;EAC9B;EAEAI,OAAOA,CAAA;IACL,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAChB,UAAU,EAAE,CAAC;EACvC;EAEAiB,UAAUA,CAACC,CAAS;IAClB,IAAI,CAACC,UAAU,CAACC,QAAQ,CAACF,CAAC,CAAC;EAC7B;EAEAG,WAAWA,CAAA;IACT,MAAMC,IAAI,GAAG,IAAI,CAACC,QAAQ,CAACC,KAAK;EAClC;EAEQC,UAAUA,CAAA;IAChB,IAAI,CAACC,OAAO,GAAI,IAAI,CAAC3B,EAAE,CAAC4B,KAAK,CAAC,EAAE,CAAC;IACjC,OAAO,IAAI,CAAC5B,EAAE,CAACE,KAAK,CAAC;MACnB2B,KAAK,EAAE,IAAI,CAAC7B,EAAE,CAACI,OAAO,CAAS,EAAE,CAAC;MAClC0B,IAAI,EAAE,IAAI,CAAC9B,EAAE,CAACI,OAAO,CAAS,EAAE,CAAC;MACjC2B,KAAK,EAAE,IAAI,CAACJ;KACb,CAAC;EACJ;EAKAK,QAAQA,CAAA;IACR,IAAI,CAACvB,QAAQ,GAAG,IAAI,CAACiB,UAAU,EAAE;EACjC;CAIC;AAvDSO,UAAA,EAATxC,MAAM,EAAE,C,qDAAgC;AAH5BI,mBAAmB,GAAAoC,UAAA,EAL/BzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWvC,mBAAmB,CA0D/B;SA1DYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}