{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nconst URL = '/api/weather';\nclass WeatherService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  getWeather(city, units = 'metric') {\n    const params = new HttpParams().set(\"city\", city).set(\"units\", units);\n    return this.http.get(`${URL}`, {\n      params\n    });\n  }\n}\nWeatherService.ɵfac = function WeatherService_Factory(t) {\n  return new (t || WeatherService)();\n};\nWeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherService,\n  factory: WeatherService.ɵfac\n});\nexport { WeatherService };","map":{"version":3,"names":["inject","HttpClient","HttpParams","URL","WeatherService","constructor","http","getWeather","city","units","params","set","get","factory","ɵfac"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\revision\\weather\\src\\app\\weather.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { WeatherData } from './models';\nimport { Observable } from 'rxjs';\n\nconst URL = '/api/weather'\n\n@Injectable()\nexport class WeatherService {\n\n  http = inject(HttpClient)\n\n  getWeather(city: string, units = 'metric'): Observable<WeatherData[]> {\n    const params = new HttpParams()\n        .set(\"city\", city)\n        .set(\"units\", units)\n\n    return this.http.get<WeatherData[]>(`${URL}`, { params })\n\n  }\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,EAAEC,UAAU,QAAQ,sBAAsB;;AAI7D,MAAMC,GAAG,GAAG,cAAc;AAE1B,MACaC,cAAc;EAD3BC,YAAA;IAGE,KAAAC,IAAI,GAAGN,MAAM,CAACC,UAAU,CAAC;;EAEzBM,UAAUA,CAACC,IAAY,EAAEC,KAAK,GAAG,QAAQ;IACvC,MAAMC,MAAM,GAAG,IAAIR,UAAU,EAAE,CAC1BS,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC,CACjBG,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAExB,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAgB,GAAGT,GAAG,EAAE,EAAE;MAAEO;IAAM,CAAE,CAAC;EAE3D;;AAXWN,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAS,OAAA,EAAdT,cAAc,CAAAU;AAAA;SAAdV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}