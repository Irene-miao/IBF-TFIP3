{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CartService } from '../cart.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nlet MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.router = inject(Router);\n      this.cartSvc = inject(CartService);\n    }\n    ngOnInit() {\n      this.form = this.fb.group({\n        username: this.fb.control('', [Validators.required])\n      });\n    }\n    login() {\n      const username = this.form.get('username')?.value;\n      this.cartSvc.username = username;\n      console.info('username: ', username);\n      this.router.navigate(['/list']);\n    }\n  }\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)();\n  };\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"size\", \"30\", \"formControlName\", \"username\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Please login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function MainComponent_Template_form_submit_2_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n        i0.ɵɵtext(6, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\");\n        i0.ɵɵelement(8, \"input\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"tr\");\n        i0.ɵɵelement(10, \"td\");\n        i0.ɵɵelementStart(11, \"td\")(12, \"button\", 2);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return MainComponent;\n})();\nexport { MainComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}