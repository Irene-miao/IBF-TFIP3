{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nlet ListComponent = class ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n  }\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(value => {\n      console.warn(value);\n      this.path = value;\n    });\n    this.uploadSvc.getPicture(imagePath).subscribe(value => {\n      this.createImage(value);\n    });\n  }\n  createImage(image) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = e => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }\n};\nListComponent = __decorate([Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})], ListComponent);\nexport { ListComponent };","map":{"version":3,"names":["Component","inject","UploadService","ListComponent","constructor","uploadSvc","ngOnInit","getImages","subscribe","value","console","warn","path","getPicture","imagePath","createImage","image","size","reader","FileReader","onload","e","picture","target","result","readAsDataURL","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  images$\n  uploadSvc = inject(UploadService)\n  path !: Object\n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(value => {\n        console.warn(value)\n        this.path = value\n      })\n     \n      this.uploadSvc.getPicture(imagePath).subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )\n      \n      }\n\n  \n  private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;AAOjD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAA1BC,YAAA;IAGE,KAAAC,SAAS,GAAGJ,MAAM,CAACC,aAAa,CAAC;EA2BnC;EAxBEI,QAAQA,CAAA;IACJ,IAAI,CAACD,SAAS,CAACE,SAAS,EAAE,CACzBC,SAAS,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;MACnB,IAAI,CAACG,IAAI,GAAGH,KAAK;IACnB,CAAC,CAAC;IAEF,IAAI,CAACJ,SAAS,CAACQ,UAAU,CAACC,SAAS,CAAC,CAACN,SAAS,CAC5CC,KAAK,IAAG;MACN,IAAI,CAACM,WAAW,CAACN,KAAK,CAAC;IACzB,CAAC,CACF;EAED;EAGIM,WAAWA,CAACC,KAAW;IAC7B,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAG,CAAC,EAAE;MAC3B,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC7BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK,IAAI,CAACC,OAAO,GAAGD,CAAC,CAACE,MAAM,EAAEC,MAAM;MACtDN,MAAM,CAACO,aAAa,CAACT,KAAK,CAAC;;EAE/B;CAED;AA9BYb,aAAa,GAAAuB,UAAA,EALzB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW1B,aAAa,CA8BzB;SA9BYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}