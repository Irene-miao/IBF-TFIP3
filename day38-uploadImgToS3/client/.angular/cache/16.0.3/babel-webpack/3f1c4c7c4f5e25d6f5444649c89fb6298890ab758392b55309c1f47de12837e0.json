{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UploadService } from '../upload.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListComponent_tr_2_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"a\", 3)(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const p_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"http://localhost:8080/\", p_r4, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4);\n  }\n}\nfunction ListComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \"List of Images\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ListComponent_tr_2_ul_4_Template, 4, 2, \"ul\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.path)(\"ngForElse\", _r1);\n  }\n}\nfunction ListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" no images \");\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.uploadSvc = inject(UploadService);\n    this.path = [];\n  }\n  ngOnInit() {\n    this.uploadSvc.getImages().subscribe(value => {\n      console.warn(value);\n      this.path = value;\n      console.warn(this.path);\n    });\n    /*this.uploadSvc.getPicture().subscribe(\n      value => {\n        this.createImage(value);\n      }\n    )*/\n  }\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 6,\n  vars: 0,\n  consts: [[4, \"ngIf\"], [\"noImages\", \"\"], [4, \"ngFor\", \"ngForOf\", \"ngForElse\"], [3, \"href\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\");\n      i0.ɵɵtemplate(2, ListComponent_tr_2_Template, 5, 2, \"tr\", 0);\n      i0.ɵɵelementStart(3, \"tr\");\n      i0.ɵɵtemplate(4, ListComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["inject","UploadService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","p_r4","ɵɵsanitizeUrl","ɵɵtextInterpolate","ɵɵtemplate","ListComponent_tr_2_ul_4_Template","ɵɵproperty","ctx_r0","path","_r1","ListComponent","constructor","uploadSvc","ngOnInit","getImages","subscribe","value","console","warn","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ListComponent_tr_2_Template","ListComponent_ng_template_4_Template","ɵɵtemplateRefExtractor"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\list\\list.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadService } from '../upload.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  \n  uploadSvc = inject(UploadService)\n  path: Object = []\n\n  ngOnInit(): void {\n      this.uploadSvc.getImages()\n      .subscribe(value => {\n        console.warn(value)\n        this.path = value\n        console.warn(this.path)\n      })\n     \n      /*this.uploadSvc.getPicture().subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )*/\n      \n      }\n\n  \n /* private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }*/\n\n}\n","<div>\n    <table>\n        <tr *ngIf=\"\">\n            <td>List of Images</td>\n            <td>\n                <ul *ngFor=\"let p of path; else noImages\">\n                    <a href=\"http://localhost:8080/{{p}}\"><li>{{p}}</li></a>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <ng-template #noImages>\n                no images\n            </ng-template>\n        </tr>\n    </table>\n</div>\n\n\n    \n\n\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,aAAa,QAAQ,mBAAmB;;;;;ICGjCC,EAAA,CAAAC,cAAA,SAA0C;IACID,EAAA,CAAAE,MAAA,GAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAjDH,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAK,sBAAA,mCAAAC,IAAA,MAAAN,EAAA,CAAAO,aAAA,CAAkC;IAAKP,EAAA,CAAAI,SAAA,GAAK;IAALJ,EAAA,CAAAQ,iBAAA,CAAAF,IAAA,CAAK;;;;;IAJ3DN,EAAA,CAAAC,cAAA,SAAa;IACLD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IACAD,EAAA,CAAAS,UAAA,IAAAC,gCAAA,gBAEK;IACTV,EAAA,CAAAG,YAAA,EAAK;;;;;IAHiBH,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAW,UAAA,YAAAC,MAAA,CAAAC,IAAA,CAAS,cAAAC,GAAA;;;;;IAO3Bd,EAAA,CAAAE,MAAA,kBACJ;;;ADTZ,MAKaa,aAAa;EAL1BC,YAAA;IAQE,KAAAC,SAAS,GAAGnB,MAAM,CAACC,aAAa,CAAC;IACjC,KAAAc,IAAI,GAAW,EAAE;;EAEjBK,QAAQA,CAAA;IACJ,IAAI,CAACD,SAAS,CAACE,SAAS,EAAE,CACzBC,SAAS,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;MACnB,IAAI,CAACR,IAAI,GAAGQ,KAAK;MACjBC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACV,IAAI,CAAC;IACzB,CAAC,CAAC;IAEF;;;;;EAMA;;;AApBOE,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAS,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1B9B,EAAA,CAAAC,cAAA,UAAK;MAEGD,EAAA,CAAAS,UAAA,IAAAuB,2BAAA,gBAOK;MACLhC,EAAA,CAAAC,cAAA,SAAI;MACAD,EAAA,CAAAS,UAAA,IAAAwB,oCAAA,gCAAAjC,EAAA,CAAAkC,sBAAA,CAEc;MAClBlC,EAAA,CAAAG,YAAA,EAAK;;;;;;SDLAY,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}