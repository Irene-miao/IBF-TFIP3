{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction InventoryComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\");\n    i0.ɵɵelement(1, \"input\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"input\", 2, 3);\n    i0.ɵɵelementStart(5, \"input\", 4);\n    i0.ɵɵlistener(\"click\", function InventoryComponent_form_1_Template_input_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSelected());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", f_r1, \" \");\n  }\n}\nclass InventoryComponent {\n  constructor() {\n    this.fruits = ['acorn_squash', 'apple', 'bell_pepper', 'blueberries', 'broccoli', 'carrot', 'celery', 'chili_pepper', 'corn', 'eggplant', 'harold', 'lettuce', 'mushroom', 'onion', 'potato', 'pumpkin', 'radish', 'squash', 'strawberry', 'sugar_snap', 'tomato', 'zucchini'];\n  }\n  onSelected() {}\n}\nInventoryComponent.ɵfac = function InventoryComponent_Factory(t) {\n  return new (t || InventoryComponent)();\n};\nInventoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InventoryComponent,\n  selectors: [[\"app-inventory\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"id\", \"{{\", \"f\", \"\", \"}}\", \"\", \"name\", \"{{\", \"f\", \"\", \"}}\", \"\"], [\"type\", \"number\", \"id\", \"quantity\", \"name\", \"quantity\"], [\"quantity\", \"\"], [\"type\", \"submit\", \"value\", \"Add\", 3, \"click\"]],\n  template: function InventoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, InventoryComponent_form_1_Template, 6, 1, \"form\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { InventoryComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵlistener","InventoryComponent_form_1_Template_input_click_5_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onSelected","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","f_r1","InventoryComponent","constructor","fruits","selectors","decls","vars","consts","template","InventoryComponent_Template","rf","ctx","ɵɵtemplate","InventoryComponent_form_1_Template","ɵɵproperty"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\fruits\\src\\app\\inventory\\inventory.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\fruits\\src\\app\\inventory\\inventory.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent {\n  fruits: string[] = [\n    'acorn_squash', 'apple', 'bell_pepper', 'blueberries', 'broccoli',\n    'carrot', 'celery', 'chili_pepper', 'corn', 'eggplant', 'harold',\n    'lettuce', 'mushroom', 'onion', 'potato', 'pumpkin', 'radish', 'squash',\n    'strawberry', 'sugar_snap', 'tomato', 'zucchini' ]\n  \n  \n    onSelected() {\n      \n    }\n  \n\n  \n}\n","\n<!--<div *ngFor=\"let f of fruits\">\n    <p>{{ f }}</p><span><img src=\"/assets/{{f}}.png\" alt={{ f }}></span>\n</div>-->\n\n<div>\n    <form *ngFor=\"let f of fruits\" >\n        <input type=\"checkbox\" id={{ f }} name= {{ f }}> \n        {{f}} \n        <input type=\"number\" id=\"quantity\" name=\"quantity\" #quantity>\n        <input type=\"submit\"  (click)=\"onSelected()\"   value=\"Add\">\n    </form>\n</div>\n"],"mappings":";;;;;ICMIA,EAAA,CAAAC,cAAA,WAAgC;IAC5BD,EAAA,CAAAE,SAAA,eAAgD;IAChDF,EAAA,CAAAG,MAAA,GACA;IAAAH,EAAA,CAAAE,SAAA,kBAA6D;IAC7DF,EAAA,CAAAC,cAAA,eAA2D;IAArCD,EAAA,CAAAI,UAAA,mBAAAC,0DAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,UAAA,EAAY;IAAA,EAAC;IAA5CX,EAAA,CAAAY,YAAA,EAA2D;;;;IAF3DZ,EAAA,CAAAa,SAAA,GACA;IADAb,EAAA,CAAAc,kBAAA,MAAAC,IAAA,MACA;;;ADPR,MAKaC,kBAAkB;EAL/BC,YAAA;IAME,KAAAC,MAAM,GAAa,CACjB,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EACjE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAChE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EACvE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAE;;EAGlDP,UAAUA,CAAA,GAEV;;AAVSK,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;QAAlBA,kBAAkB;EAAAG,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCF/BzB,EAAA,CAAAC,cAAA,UAAK;MACDD,EAAA,CAAA2B,UAAA,IAAAC,kCAAA,kBAKO;MACX5B,EAAA,CAAAY,YAAA,EAAM;;;MANkBZ,EAAA,CAAAa,SAAA,GAAS;MAATb,EAAA,CAAA6B,UAAA,YAAAH,GAAA,CAAAR,MAAA,CAAS;;;;;;SDCpBF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}