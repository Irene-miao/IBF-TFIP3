{"ast":null,"code":"import { inject } from '@angular/core';\nimport { ImageService } from '../image.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/detail\", a1];\n};\nfunction ListComponent_tr_9_td_2_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"a\", 0)(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, i_r6));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6);\n  }\n}\nfunction ListComponent_tr_9_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, ListComponent_tr_9_td_2_ul_1_Template, 4, 4, \"ul\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const image_r4 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", image_r4.keys);\n  }\n}\nfunction ListComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\");\n    i0.ɵɵtemplate(2, ListComponent_tr_9_td_2_Template, 2, 1, \"td\", 3);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx_r0.images$));\n  }\n}\nfunction ListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" no images \");\n  }\n}\nconst _c1 = function () {\n  return [\"/\"];\n};\nclass ListComponent {\n  constructor() {\n    this.imageSvc = inject(ImageService);\n  }\n  ngOnInit() {\n    this.images$ = this.imageSvc.getImages();\n    /*this.uploadSvc.getPicture().subscribe(\n      value => {\n        this.createImage(value);\n      }\n    )*/\n  }\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[3, \"routerLink\"], [4, \"ngIf\", \"ngIfElse\"], [\"noImages\", \"\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \"Upload more image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\")(6, \"button\", 0);\n      i0.ɵɵtext(7, \"Upload\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtext(8, \" < \");\n      i0.ɵɵtemplate(9, ListComponent_tr_9_Template, 4, 3, \"tr\", 1);\n      i0.ɵɵelementStart(10, \"tr\");\n      i0.ɵɵtemplate(11, ListComponent_ng_template_11_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.images$)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.RouterLink, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["inject","ImageService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","i_r6","ɵɵtextInterpolate","ɵɵtemplate","ListComponent_tr_9_td_2_ul_1_Template","image_r4","keys","ɵɵelement","ListComponent_tr_9_td_2_Template","ɵɵpipeBind1","ctx_r0","images$","ListComponent","constructor","imageSvc","ngOnInit","getImages","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ListComponent_tr_9_Template","ListComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction0","_c1","_r1"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\components\\list.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day38\\client\\src\\app\\components\\list.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ImageService } from '../image.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit{\n\n  images$!: Observable<any>\n  imageSvc = inject(ImageService)\n  \n\n  ngOnInit(): void {\n      this.images$ = this.imageSvc.getImages()\n      \n     \n      /*this.uploadSvc.getPicture().subscribe(\n        value => {\n          this.createImage(value);\n        }\n      )*/\n      \n      }\n\n  \n /* private createImage(image: Blob) {\n    if (image && image.size > 0) {\n      let reader = new FileReader();\n      reader.onload = (e) => this.picture = e.target?.result;\n      reader.readAsDataURL(image);\n    }\n  }*/\n\n}\n","<div>\n    <table>\n        <tr>\n            <td>Upload more image</td>\n            <td>\n                <button [routerLink]=\"['/']\">Upload</button>\n            </td>\n        </tr>\n        <\n        <tr *ngIf=\"images$; else noImages\">\n            <td></td>\n            <td *ngIf=\"images$ | async as image\">\n                <ul *ngFor=\"let i of image.keys\">\n                    <a [routerLink]=\"['/detail', i]\"><li>{{i}}</li></a>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <ng-template #noImages>\n                no images\n            </ng-template>\n        </tr>\n    </table>\n</div>\n\n\n    \n\n\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAEzD,SAASC,YAAY,QAAQ,kBAAkB;;;;;;;;;ICU/BC,EAAA,CAAAC,cAAA,SAAiC;IACQD,EAAA,CAAAE,MAAA,GAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA5CH,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAK,UAAA,eAAAL,EAAA,CAAAM,eAAA,IAAAC,GAAA,EAAAC,IAAA,EAA6B;IAAKR,EAAA,CAAAI,SAAA,GAAK;IAALJ,EAAA,CAAAS,iBAAA,CAAAD,IAAA,CAAK;;;;;IAFlDR,EAAA,CAAAC,cAAA,SAAqC;IACjCD,EAAA,CAAAU,UAAA,IAAAC,qCAAA,gBAEK;IACTX,EAAA,CAAAG,YAAA,EAAK;;;;IAHiBH,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,UAAA,YAAAO,QAAA,CAAAC,IAAA,CAAa;;;;;IAHvCb,EAAA,CAAAC,cAAA,SAAmC;IAC/BD,EAAA,CAAAc,SAAA,SAAS;IACTd,EAAA,CAAAU,UAAA,IAAAK,gCAAA,gBAIK;;IACTf,EAAA,CAAAG,YAAA,EAAK;;;;IALIH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,UAAA,SAAAL,EAAA,CAAAgB,WAAA,OAAAC,MAAA,CAAAC,OAAA,EAAsB;;;;;IAQvBlB,EAAA,CAAAE,MAAA,kBACJ;;;;;;ADhBZ,MAKaiB,aAAa;EAL1BC,YAAA;IAQE,KAAAC,QAAQ,GAAGvB,MAAM,CAACC,YAAY,CAAC;;EAG/BuB,QAAQA,CAAA;IACJ,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACG,QAAQ,CAACE,SAAS,EAAE;IAGxC;;;;;EAMA;;;AAhBOJ,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAK,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1B9B,EAAA,CAAAC,cAAA,UAAK;MAGWD,EAAA,CAAAE,MAAA,wBAAiB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC1BH,EAAA,CAAAC,cAAA,SAAI;MAC6BD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAGpDH,EAAA,CAAAE,MAAA,UACA;MAAAF,EAAA,CAAAU,UAAA,IAAAsB,2BAAA,gBAOK;MACLhC,EAAA,CAAAC,cAAA,UAAI;MACAD,EAAA,CAAAU,UAAA,KAAAuB,qCAAA,gCAAAjC,EAAA,CAAAkC,sBAAA,CAEc;MAClBlC,EAAA,CAAAG,YAAA,EAAK;;;;MAhBWH,EAAA,CAAAI,SAAA,GAAoB;MAApBJ,EAAA,CAAAK,UAAA,eAAAL,EAAA,CAAAmC,eAAA,IAAAC,GAAA,EAAoB;MAI/BpC,EAAA,CAAAI,SAAA,GAAe;MAAfJ,EAAA,CAAAK,UAAA,SAAA0B,GAAA,CAAAb,OAAA,CAAe,aAAAmB,GAAA;;;;;;SDAflB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}