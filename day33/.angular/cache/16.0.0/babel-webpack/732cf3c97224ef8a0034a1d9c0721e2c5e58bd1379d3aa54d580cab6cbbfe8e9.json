{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nfunction ThoughtsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass ThoughtsComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n  }\n  ngOnInit() {\n    this.thoughtsForm = this.fb.group({\n      thought: this.fb.control('', [Validators.required])\n    });\n  }\n  clearForm() {\n    this.thoughtsForm.reset();\n  }\n  addThought() {\n    const thought = this.thoughtsForm.value;\n    this.thoughtsArray.push(thought);\n  }\n}\nThoughtsComponent.ɵfac = function ThoughtsComponent_Factory(t) {\n  return new (t || ThoughtsComponent)();\n};\nThoughtsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThoughtsComponent,\n  selectors: [[\"app-thoughts\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [1, \"grid-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Type here\", \"formControlName\", \"thought\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [4, \"ngFor\"]],\n  template: function ThoughtsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"My Thoughts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"textarea\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ThoughtsComponent_Template_button_click_6_listener() {\n        return ctx.clearForm();\n      });\n      i0.ɵɵtext(7, \" Clear \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ThoughtsComponent_Template_button_click_8_listener() {\n        return ctx.addThought();\n      });\n      i0.ɵɵtext(9, \" Share \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, ThoughtsComponent_div_10_Template, 2, 0, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.thoughtsForm);\n    }\n  },\n  dependencies: [i1.MatButton, i2.MatInput, i3.MatFormField, i3.MatLabel, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ThoughtsComponent };","map":{"version":3,"names":["inject","FormBuilder","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ThoughtsComponent","constructor","fb","ngOnInit","thoughtsForm","group","thought","control","required","clearForm","reset","addThought","value","thoughtsArray","push","selectors","decls","vars","consts","template","ThoughtsComponent_Template","rf","ctx","ɵɵtext","ɵɵlistener","ThoughtsComponent_Template_button_click_6_listener","ThoughtsComponent_Template_button_click_8_listener","ɵɵtemplate","ThoughtsComponent_div_10_Template","ɵɵproperty"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\thoughts\\thoughts.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\thoughts\\thoughts.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-thoughts',\n  templateUrl: './thoughts.component.html',\n  styleUrls: ['./thoughts.component.css']\n})\nexport class ThoughtsComponent {\n  \n  thoughtsForm!: FormGroup\n  thoughtsArray!: FormArray\n  fb: FormBuilder = inject(FormBuilder)\n\n\nngOnInit(): void {\n    this.thoughtsForm = this.fb.group({\n      thought: this.fb.control('', [Validators.required]),\n      \n    })\n\n}\n\n\n  clearForm() {\n  this.thoughtsForm.reset();\n  }\n\n  addThought() {\n    const thought = this.thoughtsForm.value\n    this.thoughtsArray.push(thought)\n  }\n\n}\n\n\n","<form [formGroup]=\"thoughtsForm\">\n    <div class=\"grid-container\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>My Thoughts</mat-label>\n        <textarea  type=\"text\" matInput placeholder=\"Type here\" formControlName=\"thought\"></textarea>\n      </mat-form-field>\n      <button mat-stroked-button (click)=\"clearForm()\">\n        Clear\n      </button>\n      <button mat-stroked-button (click)=\"addThought()\">\n        Share\n      </button>\n  </div>\n  </form>\n\n  <div *ngFor=\"\">\n    <p></p>\n  </div>"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAAoBC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;;;;;;;;ICc5EC,EAAA,CAAAC,cAAA,UAAe;IACbD,EAAA,CAAAE,SAAA,QAAO;IACTF,EAAA,CAAAG,YAAA,EAAM;;;ADdR,MAKaC,iBAAiB;EAL9BC,YAAA;IASE,KAAAC,EAAE,GAAgBT,MAAM,CAACC,WAAW,CAAC;;EAGvCS,QAAQA,CAAA;IACJ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChCC,OAAO,EAAE,IAAI,CAACJ,EAAE,CAACK,OAAO,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,CAAC;KAEnD,CAAC;EAEN;EAGEC,SAASA,CAAA;IACT,IAAI,CAACL,YAAY,CAACM,KAAK,EAAE;EACzB;EAEAC,UAAUA,CAAA;IACR,MAAML,OAAO,GAAG,IAAI,CAACF,YAAY,CAACQ,KAAK;IACvC,IAAI,CAACC,aAAa,CAACC,IAAI,CAACR,OAAO,CAAC;EAClC;;AAvBWN,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BzB,EAAA,CAAAC,cAAA,cAAiC;MAGdD,EAAA,CAAA2B,MAAA,kBAAW;MAAA3B,EAAA,CAAAG,YAAA,EAAY;MAClCH,EAAA,CAAAE,SAAA,kBAA6F;MAC/FF,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,gBAAiD;MAAtBD,EAAA,CAAA4B,UAAA,mBAAAC,mDAAA;QAAA,OAASH,GAAA,CAAAb,SAAA,EAAW;MAAA,EAAC;MAC9Cb,EAAA,CAAA2B,MAAA,cACF;MAAA3B,EAAA,CAAAG,YAAA,EAAS;MACTH,EAAA,CAAAC,cAAA,gBAAkD;MAAvBD,EAAA,CAAA4B,UAAA,mBAAAE,mDAAA;QAAA,OAASJ,GAAA,CAAAX,UAAA,EAAY;MAAA,EAAC;MAC/Cf,EAAA,CAAA2B,MAAA,cACF;MAAA3B,EAAA,CAAAG,YAAA,EAAS;MAIbH,EAAA,CAAA+B,UAAA,KAAAC,iCAAA,iBAEM;;;MAjBFhC,EAAA,CAAAiC,UAAA,cAAAP,GAAA,CAAAlB,YAAA,CAA0B;;;;;;SDQnBJ,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}