{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/forms\";\nfunction ThoughtsComponent_mat_hint_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 8);\n    i0.ɵɵtext(1, \" Web share is not supported \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ThoughtsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r2);\n  }\n}\nclass ThoughtsComponent {\n  constructor() {\n    this.onThought = new Subject();\n    this.canShare = false;\n    this.fb = inject(FormBuilder);\n  }\n  ngOnInit() {\n    this.thoughtForm = this.fb.group({\n      thought: this.fb.control('', [Validators.required, Validators.minLength(5)])\n    });\n  }\n  clearForm() {\n    this.thoughtForm.reset();\n  }\n  onSubmit() {\n    const thought = this.thoughtForm.value['thought'];\n    this.onThought.next(thought);\n  }\n  invalid() {\n    return this.canShare || this.thoughtForm.invalid;\n  }\n}\nThoughtsComponent.ɵfac = function ThoughtsComponent_Factory(t) {\n  return new (t || ThoughtsComponent)();\n};\nThoughtsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThoughtsComponent,\n  selectors: [[\"app-thoughts\"]],\n  inputs: {\n    canShare: \"canShare\"\n  },\n  outputs: {\n    onThought: \"onThought\"\n  },\n  decls: 15,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"grid-container\"], [\"appearance\", \"outline\"], [\"cols\", \"30\", \"rows\", \"5\", \"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Type here\", \"formControlName\", \"thought\"], [\"class\", \"error\", \"align\", \"end\", 4, \"ngIf\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [\"type\", \"submit\", \"mat-stroked-button\", \"\", 3, \"disabled\"], [\"formArrayName\", \"thoughtsArray\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"end\", 1, \"error\"], [\"formArrayName\", \"thoughtsArray\"]],\n  template: function ThoughtsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ThoughtsComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"My Thoughts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"textarea\", 3);\n      i0.ɵɵtemplate(6, ThoughtsComponent_mat_hint_6_Template, 2, 0, \"mat-hint\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ThoughtsComponent_Template_button_click_8_listener() {\n        return ctx.clearForm();\n      });\n      i0.ɵɵtext(9, \" Clear \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6)(11, \"mat-icon\");\n      i0.ɵɵtext(12, \"share\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"> \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(14, ThoughtsComponent_div_14_Template, 3, 1, \"div\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.thoughtForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.canShare);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.invalid());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.thoughtsArray.controls);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.MatButton, i3.MatIcon, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatHint, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i6.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ThoughtsComponent };","map":{"version":3,"names":["inject","FormBuilder","Validators","Subject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","t_r2","ThoughtsComponent","constructor","onThought","canShare","fb","ngOnInit","thoughtForm","group","thought","control","required","minLength","clearForm","reset","onSubmit","value","next","invalid","selectors","inputs","outputs","decls","vars","consts","template","ThoughtsComponent_Template","rf","ctx","ɵɵlistener","ThoughtsComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ThoughtsComponent_mat_hint_6_Template","ThoughtsComponent_Template_button_click_8_listener","ThoughtsComponent_div_14_Template","ɵɵproperty","thoughtsArray","controls"],"sources":["C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\thoughts\\thoughts.component.ts","C:\\Users\\super\\OneDrive\\Desktop\\day33\\src\\app\\thoughts\\thoughts.component.html"],"sourcesContent":["import { Component, Input, Output, inject } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-thoughts',\n  templateUrl: './thoughts.component.html',\n  styleUrls: ['./thoughts.component.css']\n})\nexport class ThoughtsComponent {\n  @Output() onThought = new Subject<string>()\n  @Input() canShare = false\n  thoughtForm!: FormGroup\n\n  fb: FormBuilder = inject(FormBuilder)\n\n\nngOnInit(): void {\n    this.thoughtForm = this.fb.group({\n      thought: this.fb.control('', [Validators.required, Validators.minLength(5)]),\n      \n    })\n\n}\n\n\n  clearForm() {\n  this.thoughtForm.reset();\n  }\n\n  onSubmit() {\n    const thought = this.thoughtForm.value['thought']\n    this.onThought.next(thought)\n  }\n\n  invalid():boolean {\n    return this.canShare || this.thoughtForm.invalid\n  }\n}\n\n\n","<form [formGroup]=\"thoughtForm\" (ngSubmit)=\"onSubmit()\">\n   \n  <div class=\"grid-container\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>My Thoughts</mat-label>\n        <textarea cols=\"30\" rows=\"5\" type=\"text\" matInput placeholder=\"Type here\" formControlName=\"thought\"></textarea>\n      <mat-hint *ngIf=\"!canShare\" class=\"error\" align=\"end\">\n        Web share is not supported\n      </mat-hint>\n      </mat-form-field>\n      <div>\n        <button mat-stroked-button (click)=\"clearForm()\">\n          Clear\n        </button>\n        <button type=\"submit\" mat-stroked-button [disabled]=\"invalid()\">\n        <mat-icon>share</mat-icon>>\n        </button>\n      </div>\n  </div>\n  </form>\n\n  <div  formArrayName=\"thoughtsArray\" *ngFor=\"let t of thoughtsArray.controls\">\n    <p>{{ t }}</p>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}